<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 启用注解,如@autowired等。默认是不启用的.  -->
    <context:annotation-config />
    
    <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->     
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
    
    
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.bgqc">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
    
	
	<!-- 我自己定义的切面，试试 -->
	<aop:aspectj-autoproxy/>
	<!-- 引入属性文件:application.properties(DataSource连接参数) -->
	<context:property-placeholder location="classpath:dbpool.properties" />
	
	<!-- Hikari Datasource -->  
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  >  
		 <property name="driverClassName" value="${jdbc.driver}" />  
		 <property name="jdbcUrl" value="${jdbc.url}"/>  
		 <property name="username" value="${jdbc.username}" />  
		 <property name="password" value="${jdbc.password}" />  
		  <!-- 连接只读数据库时配置为true， 保证安全   -->
		 <property name="readOnly" value="false" />  
		<!--  等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒   -->
		 <property name="connectionTimeout" value="30000" />  
		 <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟   -->
		 <property name="idleTimeout" value="600000" />  
		 <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->  
		 <property name="maxLifetime" value="1800000" />  
		 <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)   -->
		 <property name="maximumPoolSize" value="15" />  
	 </bean>
	 
    <!-- 配置MyBatis:指定使用的数据源,引入mybatis核心配置文件-->
    <!-- 在使用mybatis时 spring使用sqlsessionFactoryBean来管理mybatis的sqlsessionFactory-->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		 	<!-- 注意其他配置 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<!--使用下面的方式配置参数，一行配置一个 -->
						<value>
							helperDialect=oracle
						</value>
					</property>
				</bean>
			</array>
		</property>
        <property name="dataSource" ref="dataSource" /> 
        <property name="configLocation" value="classpath:myBatis.xml" />
    </bean> 
  	
    	<!-- 自动扫描所有的Mapper接口  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="hsspring.mapper"></property>
    </bean> 
    
    <!-- dao层调用 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean> 
     
</beans>